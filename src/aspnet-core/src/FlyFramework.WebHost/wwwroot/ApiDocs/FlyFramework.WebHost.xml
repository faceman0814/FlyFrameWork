<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FlyFramework.WebHost</name>
    </assembly>
    <members>
        <member name="F:FlyFramework.Extentions.EnvironmentExs.Development">
            <summary>
            指定开发环境。
            </summary>
            <remarks>开发环境可以实现不应在生产中暴露的功能。由于性能成本，范围验证和依赖验证仅发生在开发中。</remarks>
        </member>
        <member name="F:FlyFramework.Extentions.EnvironmentExs.Staging">
            <summary>
            指定预发布环境。
            </summary>
            <remarks>预发布环境可用于在更改生产环境之前验证应用程序更改。</remarks>
        </member>
        <member name="F:FlyFramework.Extentions.EnvironmentExs.Production">
            <summary>
            指定生产环境
            </summary>
            <remarks>生产环境应配置为最大化安全性，性能和应用程序可用性。</remarks>
        </member>
        <member name="F:FlyFramework.Extentions.EnvironmentExs.Testing">
            <summary>
            指定测试环境
            </summary>
        </member>
        <member name="M:FlyFramework.Extentions.ServiceCollectionExtensions.AddHangfire(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationRoot,System.Action{Hangfire.BackgroundJobServerOptions})">
            <summary>
            配置Hangfire
            </summary>
            <param name="configuration"></param>
            <param name="optionsAction"></param>
        </member>
        <member name="M:FlyFramework.Extentions.ServiceCollectionExtensions.AddMinio(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationRoot)">
            <summary>
            配置Minio
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:FlyFramework.Extentions.ServiceCollectionExtensions.AddRedis(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationRoot)">
            <summary>
            配置Redis缓存
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:FlyFramework.Extentions.ServiceCollectionExtensions.AddDynamicApi(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            配置动态API
            </summary>
        </member>
        <member name="M:FlyFramework.Extentions.ServiceCollectionExtensions.AddSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            配置Swagger
            </summary>
        </member>
        <member name="M:FlyFramework.Extentions.ServiceCollectionExtensions.AddJsonOptions(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            配置格式化响应
            </summary>
        </member>
        <member name="M:FlyFramework.Extentions.ServiceCollectionExtensions.AddFilters(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            配置全局过滤器
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:FlyFramework.Extentions.ServiceCollectionExtensions.AddKestrel(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
             <summary>
            配置请求大小限制
             </summary>
        </member>
        <member name="M:FlyFramework.Extentions.ServiceCollectionExtensions.AddCors(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfigurationRoot)">
            <summary>
            CORS策略
            </summary>
            <returns></returns>
        </member>
        <member name="M:FlyFramework.Extentions.ServiceCollectionExtensions.UseAutoFac(Microsoft.Extensions.Hosting.IHostBuilder)">
            <summary>
            AutoFac 配置
            </summary>
            <param name="hostBuilder"></param>
            <returns></returns>
        </member>
        <member name="M:FlyFramework.Extentions.ServiceCollectionExtensions.UseHangfireStorage(Hangfire.IGlobalConfiguration,Microsoft.Extensions.Configuration.IConfigurationRoot)">
            <summary>
            使用 Hangfire Storage
            </summary>
            <param name="configuration"></param>
            <returns></returns>
        </member>
        <member name="M:FlyFramework.Extentions.ServiceCollectionExtensions.UseSwagger(Microsoft.AspNetCore.Builder.WebApplication,Microsoft.AspNetCore.Builder.WebApplicationBuilder)">
            <summary>
            启用Swagger
            </summary>
        </member>
        <member name="F:FlyFramework.Filters.UnitOfWorkFilter.FilterOrder">
            <summary>
            过滤器排序
            </summary>
        </member>
        <member name="P:FlyFramework.Filters.UnitOfWorkFilter.Order">
            <summary>
            排序属性
            </summary>
        </member>
        <member name="M:FlyFramework.Filters.UnitOfWorkFilter.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            拦截请求
            </summary>
            <param name="context">动作方法上下文</param>
            <param name="next">中间件委托</param>
        </member>
        <member name="T:AppConfig">
            <summary>
            配置类
            </summary>
        </member>
        <member name="M:AppConfig.Configuration(Microsoft.AspNetCore.Builder.WebApplication)">
            <summary>
            启用服务集合
            </summary>
            <param name="_app"></param>
            <returns></returns>
        </member>
    </members>
</doc>
