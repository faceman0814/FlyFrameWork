<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FlyFramework.Core</name>
    </assembly>
    <members>
        <member name="M:FlyFramework.Authorizations.ILogInManager.LoginAsync(FlyFramework.UserModule.User)">
            <summary>
            获取登录用户信息
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:FlyFramework.Authorizations.ILogInManager.GetClaims(System.String)">
            <summary>
            获取用户信息
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="F:FlyFramework.FlyFrameworkConst.AccessTokenExpiration">
            <summary>
            Token过期时间 默认1天
            </summary>
        </member>
        <member name="F:FlyFramework.FlyFrameworkConst.RefreshTokenExpiration">
            <summary>
            RefreshToken过期时间 默认30h
            </summary>
        </member>
        <member name="M:FlyFramework.LazyModule.LazyDefinition.IFlyFrameworkLazy.LazyGetRequiredService``1">
            <summary>
            This method is equivalent of the GetRequiredService method.
            It does exists for backward compatibility.
            </summary>
        </member>
        <member name="M:FlyFramework.LazyModule.LazyDefinition.IFlyFrameworkLazy.LazyGetRequiredService(System.Type)">
            <summary>
            This method is equivalent of the GetRequiredService method.
            It does exists for backward compatibility.
            </summary>
        </member>
        <member name="M:FlyFramework.LazyModule.LazyDefinition.IFlyFrameworkLazy.LazyGetService``1">
            <summary>
            This method is equivalent of the GetService method.
            It does exists for backward compatibility.
            </summary>
        </member>
        <member name="M:FlyFramework.LazyModule.LazyDefinition.IFlyFrameworkLazy.LazyGetService(System.Type)">
            <summary>
            This method is equivalent of the GetService method.
            It does exists for backward compatibility.
            </summary>
        </member>
        <member name="M:FlyFramework.LazyModule.LazyDefinition.IFlyFrameworkLazy.LazyGetService``1(``0)">
            <summary>
            This method is equivalent of the <see cref="!:ICachedServiceProviderBase.GetService&lt;T&gt;(T)"/> method.
            It does exists for backward compatibility.
            </summary>
        </member>
        <member name="M:FlyFramework.LazyModule.LazyDefinition.IFlyFrameworkLazy.LazyGetService(System.Type,System.Object)">
            <summary>
            This method is equivalent of the <see cref="!:ICachedServiceProviderBase.GetService(Type, object)"/> method.
            It does exists for backward compatibility.
            </summary>
        </member>
        <member name="M:FlyFramework.LazyModule.LazyDefinition.IFlyFrameworkLazy.LazyGetService(System.Type,System.Func{System.IServiceProvider,System.Object})">
            <summary>
            This method is equivalent of the <see cref="!:ICachedServiceProviderBase.GetService(Type, Func&lt;IServiceProvider, object&gt;)"/> method.
            It does exists for backward compatibility.
            </summary>
        </member>
        <member name="M:FlyFramework.LazyModule.LazyDefinition.IFlyFrameworkLazy.LazyGetService``1(System.Func{System.IServiceProvider,System.Object})">
            <summary>
            This method is equivalent of the <see cref="!:ICachedServiceProviderBase.GetService&lt;T&gt;(Func&lt;IServiceProvider, object&gt;)"/> method.
            It does exists for backward compatibility.
            </summary>
        </member>
        <member name="M:FlyFramework.UserModule.DomainService.IUserManager.FindByNameAsync(System.String)">
            <summary>
            根据用户名查找用户
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:FlyFramework.UserModule.DomainService.IUserManager.CreateUserAsync(FlyFramework.UserModule.User)">
            <summary>
            创建用户
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
    </members>
</doc>
