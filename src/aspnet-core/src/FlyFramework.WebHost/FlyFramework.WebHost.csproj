<Project Sdk="Microsoft.NET.Sdk.Web">
	<Import Project="..\..\version.props" />
	<PropertyGroup>
		<LangVersion>$(LangVersion)</LangVersion>
		<TargetFramework>$(DotNetVersion)</TargetFramework>
		<RootNamespace>FlyFramework</RootNamespace>
		<ApiDocDir>wwwroot\ApiDocs</ApiDocDir>
	</PropertyGroup>
	<ItemGroup>
		<Content Remove="wwwroot\pages\swagger.html" />
	</ItemGroup>

	<ItemGroup>
		<EmbeddedResource Include="wwwroot\pages\swagger.html">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</EmbeddedResource>
	</ItemGroup>
	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<GenerateDocumentationFile>True</GenerateDocumentationFile>
		<DocumentationFile>bin\Debug\FlyFramework.WebHost.xml</DocumentationFile>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Autofac.Extensions.DependencyInjection" Version="10.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.Components.QuickGrid.EntityFrameworkAdapter" Version="8.0.8" />
		<PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="8.0.8" />
		<PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="8.0.5" />
		<!--<PackageReference Include="ServiceStack.Redis" Version="8.4.0" />-->
		<PackageReference Include="Swashbuckle.AspNetCore" Version="6.4.0" />
		<PackageReference Include="Swashbuckle.AspNetCore.Filters" Version="8.0.2" />
		<PackageReference Include="IdentityServer4.AspNetIdentity" Version="4.1.2" />
		<!--<PackageReference Include="Autofac" Version="8.1.0" />
		<PackageReference Include="Autofac.Extensions.DependencyInjection" Version="7.1.0" />-->
	</ItemGroup>

	<!--在构建项目后，复制所有以FlyFramework开头的XML文档文件到指定的API文档目录。这通常用于将生成的XML文档文件（例如API注释）整理到一个目录中，便于进一步的处理或发布。这种做法可以适合于生成API文档如Swagger时的使用场景。-->
	<Target Name="CopyXmlDocFileForBuild" AfterTargets="Build">
		<ItemGroup>
			<XmlDocFiles Include="$(OutDir)$(AssemblyName).xml" />
			<!--Include="@(ReferencePath->'%(RootDir)%(Directory)%(Filename).xml')"：这行表示从所有项目引用（ReferencePath）的路径中收集以.xml为扩展名的文件。这些文件通常是生成的XML文档文件。-->
			<!--Condition="$([System.String]::new('%(FileName)').StartsWith('FlyFramework'))"：此条件用于过滤文件，仅包括文件名以FlyFramework开头的XML文档文件。这保证只有相关的文档文件被选择。-->
			<XmlDocFiles Include=" @(ReferencePath->'%(RootDir)%(Directory)%(Filename).xml')" Condition="$([System.String]::new('%(FileName)').StartsWith('FlyFramework'))" />
		</ItemGroup>
		<!--SourceFiles="@(XmlDocFiles)"：指定要复制的源文件为上一步中定义的XmlDocFiles集合。-->
		<!--`Condition="Exists('%(FullPath)')"：确保复制前源文件存在，这是一种安全检查。-->
		<!--DestinationFolder="$(ApiDocDir)"：目的地文件夹为$(ApiDocDir)，这个属性之前已经在项目文件中定义，指向存放API文档的目录。-->
		<!--SkipUnchangedFiles="true"：此选项表示只有发生变化的文件会被复制，这可以提高效率，避免不必要的复制操作。-->
		<Copy SourceFiles="@(XmlDocFiles)" Condition="Exists('%(FullPath)')" DestinationFolder="$(ApiDocDir)" SkipUnchangedFiles="true" />
	</Target>

	<ItemGroup>
	  <Folder Include="App_Data\Log\" />
	  <Folder Include="wwwroot\ApiDocs\" />
	</ItemGroup>
	<ItemGroup>
	  <ProjectReference Include="..\FlyFramework.WebCore\FlyFramework.WebCore.csproj" />
	</ItemGroup>

</Project>
